[0m[[0m[0mdebug[0m] [0m[0mCreated transactional ClassFileManager with tempDir = /Users/luzm/git/compilerdesign/homework_scala/semantic_analysis/target/scala-3.3.0/classes.bak[0m
[0m[[0m[0mdebug[0m] [0m[0mAbout to delete class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mWe backup class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mCreated transactional ClassFileManager with tempDir = /Users/luzm/git/compilerdesign/homework_scala/semantic_analysis/target/scala-3.3.0/classes.bak[0m
[0m[[0m[0mdebug[0m] [0m[0mAbout to delete class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mWe backup class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mRegistering generated classes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$$anon$5.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$Identity$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$StateTMonadError.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$VarTerm.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Var.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeScheme$Simple$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Var$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$LetTerm.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Monad$Monad.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Value$ConstValue$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Const$IntConst$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Value$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst$Compo$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Applicative$Applicative.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Const$BoolConst.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$AppTerm.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Applicative.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Functor$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type$FunTy.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Op$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Monad$MonadError.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Const$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	BigStepEval.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Const.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Value$LambdaValue$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SmallStepEval$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeScheme.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$IfTerm.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$LambdaTerm.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$Result$Ok$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst$Single$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$Result$Error$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Applicative$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Functor$Functor.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeScheme$Forall.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Const$IntConst.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Op.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$StateResultMonadError.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type$FunTy$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type$VarTy$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$ConstTerm$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Monad.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$Identity.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Functor$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Op$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$FixTerm$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$StateInfo$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Value.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type$VarTy.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$$anon$7.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$$anon$8.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$StateTMonad.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$OpTerm.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubstitutable.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$StateT$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	BigStepEval$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SmallStepEval.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Applicative$ApplicativeError.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Monad$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$$anon$3.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst$Compo.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Monad$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$VarTerm$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$StateT.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Applicative$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$LambdaTerm$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$$anon$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Value$ConstValue.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$Result$Ok.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$$anon$4.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$StateMonad.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$ConstTerm.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$AppTerm$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Const$BoolConst$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$Result$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeScheme$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$$anon$6.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst$$anon$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$Result$Error.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$OpTerm$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Functor.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$IfTerm$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst$Single.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$StateInfo.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeScheme$Forall$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeScheme$Simple.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$FixTerm.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$Result.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$FTV.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Value$LambdaValue.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$LetTerm$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$$anon$5.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$Identity$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$StateTMonadError.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$VarTerm.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Var.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeScheme$Simple$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Var$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$LetTerm.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Monad$Monad.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Value$ConstValue$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Const$IntConst$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Value$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst$Compo$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Applicative$Applicative.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Const$BoolConst.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$AppTerm.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Applicative.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Functor$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type$FunTy.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Op$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Monad$MonadError.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Const$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	BigStepEval.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Const.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Value$LambdaValue$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SmallStepEval$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeScheme.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$IfTerm.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$LambdaTerm.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$Result$Ok$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst$Single$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$Result$Error$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Applicative$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Functor$Functor.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeScheme$Forall.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Const$IntConst.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Op.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$StateResultMonadError.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type$FunTy$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type$VarTy$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$ConstTerm$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Monad.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$Identity.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Functor$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Op$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$FixTerm$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$StateInfo$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Value.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type$VarTy.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$$anon$7.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$$anon$8.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$StateTMonad.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$OpTerm.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubstitutable.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$StateT$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	BigStepEval$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SmallStepEval.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Applicative$ApplicativeError.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Monad$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$$anon$3.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst$Compo.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Monad$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$VarTerm$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$StateT.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Applicative$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$LambdaTerm$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$$anon$2.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Value$ConstValue.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$Result$Ok.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$$anon$4.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$StateMonad.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$ConstTerm.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$AppTerm$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Const$BoolConst$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$Result$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeScheme$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$$anon$6.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst$$anon$2.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$Result$Error.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$OpTerm$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Functor.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$IfTerm$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeSubst$Single.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	StateT$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$StateInfo.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$Type$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeScheme$Forall$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$TypeScheme$Simple.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$FixTerm.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Util$Result.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AlgorithmW$FTV.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Value$LambdaValue.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdaCalculus$Term$LetTerm$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0mRemoving the temporary directory used for backing up class files: /Users/luzm/git/compilerdesign/homework_scala/semantic_analysis/target/scala-3.3.0/classes.bak[0m
